plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}


group = 'com.exalt.training'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	implementation 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	annotationProcessor 'org.projectlombok:lombok'

	// JAXB dependencies
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'

}


tasks.register('generateJaxbClasses', JavaExec) {
	main = 'com.sun.tools.xjc.XJCFacade'
	classpath = files(
			// Ensure the JAXB runtime library is included in the classpath
			configurations.runtimeClasspath
	)
	args = [
			'-d', 'build/generated-sources/xjc',   // Directory for generated sources
			'-p', 'com.exalt.training.ws',         // Package name for generated classes
			'src/main/resources/car-rental.xsd' // Path to your XSD file
	]
}


tasks.named('compileJava') {
	dependsOn generateJaxbClasses
}

sourceSets {
	main {
		java {
			srcDir 'build/generated-sources/xjc'
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
